# Database
spring.datasource.url: ${JDBC_DATABASE_URL:}
spring.jpa.hibernate.ddl-auto=update
spring.datasource.initialization-mode=always
spring.jpa.properties.hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.profiles.active=production

server.port=${PORT:8080}

# Zipkin
spring.zipkin.base-url = http://ec2-18-219-187-203.us-east-2.compute.amazonaws.com:9411/
spring.sleuth.sampler.probability=1.0

# Service discovery 
spring.application.name = shopping-cart-and-order-service
eureka.client.service-url.defaultZone = http://ec2-18-223-252-79.us-east-2.compute.amazonaws.com:8761/eureka
eureka.instance.non-secure-port=80
eureka.instance.hostname=shopping-cart-microservice.herokuapp.com

# Producer config 
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.bootstrap-servers= ec2-18-207-140-130.compute-1.amazonaws.com:9092
cart.services.order-created-topic=Order-Created

# Consumer config 
spring.kafka.consumer.bootstrap-servers= ec2-18-207-140-130.compute-1.amazonaws.com:9092
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
cart.services.shopping-cart-and-order-service-failed-qty-deduction-listener=shopping-cart-and-order-service-failed-qty-deduction-listener
cart.services.shopping-cart-and-order-service-order-succeed-listener=shopping-cart-and-order-service-order-succeed-listener
cart.services.Order-Succeed=Order-Succeed
cart.services.Fail-Qty-Deduction=Fail-Qty-Deduction
cart.services.Fail-Payment=Fail-Payment